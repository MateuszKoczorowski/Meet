{"ast":null,"code":"var _jsxFileName = \"M:\\\\projekty  git\\\\MeetLong\\\\client\\\\src\\\\pages\\\\messenger\\\\Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversations/Conversation\";\nimport Message from \"../../components/message/Message\";\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const socket = useRef();\n  const {\n    user\n  } = useContext(AuthContext);\n  const scrollRef = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", users => {\n      setOnlineUsers(user.followings.filter(f => users.some(u => u.userId === f)));\n    });\n  }, [user]);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"/conversations/\" + user._id);\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [user._id]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), conversations.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrentChat(c),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: c,\n              currentUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.sender === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a conversation to start a chat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {\n            onlineUsers: onlineUsers,\n            currentId: user._id,\n            setCurrentChat: setCurrentChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"4YVpUWnluiI4ez6Aa58DU5K4Xp0=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["M:/projekty  git/MeetLong/client/src/pages/messenger/Messenger.jsx"],"names":["Topbar","Conversation","Message","ChatOnline","useContext","useEffect","useRef","useState","AuthContext","axios","Messenger","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","socket","user","scrollRef","current","io","on","data","sender","senderId","text","createdAt","Date","now","members","includes","prev","emit","_id","users","followings","filter","f","some","u","userId","getConversations","res","get","err","console","log","getMessages","handleSubmit","e","preventDefault","message","conversationId","receiverId","find","member","post","scrollIntoView","behavior","map","c","m","target","value"],"mappings":"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","sourcesContent":["import \"./messenger.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from \"../../components/conversations/Conversation\";\r\nimport Message from \"../../components/message/Message\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Messenger() {\r\n    const [conversations, setConversations] = useState([]);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const [arrivalMessage, setArrivalMessage] = useState(null);\r\n    const [onlineUsers, setOnlineUsers] = useState([]);\r\n    const socket = useRef();\r\n    const { user } = useContext(AuthContext);\r\n    const scrollRef = useRef();\r\n  \r\n    useEffect(() => {\r\n      socket.current = io(\"ws://localhost:8900\");\r\n      socket.current.on(\"getMessage\", (data) => {\r\n        setArrivalMessage({\r\n          sender: data.senderId,\r\n          text: data.text,\r\n          createdAt: Date.now(),\r\n        });\r\n      });\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      arrivalMessage &&\r\n        currentChat?.members.includes(arrivalMessage.sender) &&\r\n        setMessages((prev) => [...prev, arrivalMessage]);\r\n    }, [arrivalMessage, currentChat]);\r\n  \r\n    useEffect(() => {\r\n      socket.current.emit(\"addUser\", user._id);\r\n      socket.current.on(\"getUsers\", (users) => {\r\n        setOnlineUsers(\r\n          user.followings.filter((f) => users.some((u) => u.userId === f))\r\n        );\r\n      });\r\n    }, [user]);\r\n  \r\n    useEffect(() => {\r\n      const getConversations = async () => {\r\n        try {\r\n          const res = await axios.get(\"/conversations/\" + user._id);\r\n          setConversations(res.data);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      getConversations();\r\n    }, [user._id]);\r\n  \r\n    useEffect(() => {\r\n      const getMessages = async () => {\r\n        try {\r\n          const res = await axios.get(\"/messages/\" + currentChat?._id);\r\n          setMessages(res.data);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      getMessages();\r\n    }, [currentChat]);\r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      const message = {\r\n        sender: user._id,\r\n        text: newMessage,\r\n        conversationId: currentChat._id,\r\n      };\r\n  \r\n      const receiverId = currentChat.members.find(\r\n        (member) => member !== user._id\r\n      );\r\n  \r\n      socket.current.emit(\"sendMessage\", {\r\n        senderId: user._id,\r\n        receiverId,\r\n        text: newMessage,\r\n      });\r\n  \r\n      try {\r\n        const res = await axios.post(\"/messages\", message);\r\n        setMessages([...messages, res.data]);\r\n        setNewMessage(\"\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n  \r\n    return (\r\n      <>\r\n        <Topbar />\r\n        <div className=\"messenger\">\r\n          <div className=\"chatMenu\">\r\n            <div className=\"chatMenuWrapper\">\r\n              <input placeholder=\"Search for friends\" className=\"chatMenuInput\" />\r\n              {conversations.map((c) => (\r\n                <div onClick={() => setCurrentChat(c)}>\r\n                  <Conversation conversation={c} currentUser={user} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"chatBox\">\r\n            <div className=\"chatBoxWrapper\">\r\n              {currentChat ? (\r\n                <>\r\n                  <div className=\"chatBoxTop\">\r\n                    {messages.map((m) => (\r\n                      <div ref={scrollRef}>\r\n                        <Message message={m} own={m.sender === user._id} />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"chatBoxBottom\">\r\n                    <textarea\r\n                      className=\"chatMessageInput\"\r\n                      placeholder=\"write something...\"\r\n                      onChange={(e) => setNewMessage(e.target.value)}\r\n                      value={newMessage}\r\n                    ></textarea>\r\n                    <button className=\"chatSubmitButton\" onClick={handleSubmit}>\r\n                      Send\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <span className=\"noConversationText\">\r\n                  Open a conversation to start a chat.\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"chatOnline\">\r\n            <div className=\"chatOnlineWrapper\">\r\n              <ChatOnline\r\n                onlineUsers={onlineUsers}\r\n                currentId={user._id}\r\n                setCurrentChat={setCurrentChat}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}